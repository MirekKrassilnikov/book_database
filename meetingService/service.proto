syntax = "proto3";

package meetingservice;

option go_package = "github.com/mirekkrassilnikov/Book_the_room/meetingservice";

message Room {
  int64 id = 1;
  string name = 2;
}

message Rooms {
  repeated Room rooms = 1;
}

message Empty {}

// Описание встречи
message Meeting {
  int64 id = 1;
  string topic = 2;
  int64 time_start = 3;
  int64 time_end = 4;
}

// Запрос на создание новой встречи
message NewMeetingRequest {
  Meeting new_meeting = 1;
}

// Ответ на запрос о создании встречи
message NewMeetingResponse {
  int64 meeting_id = 1;     // ID созданной встречи
  string error_message = 2; // Сообщение об ошибке (если есть)
}

// Запрос на получение встреч в комнате
message MeetingsInTheRoomRequest {
  int64 room_id = 1;
}

// Ответ на запрос встреч в комнате
message MeetingsInTheRoomResponse {
  repeated Meeting meetings = 1;
}

// Запрос на проверку доступности комнаты
message AvailabilityRequest {
  int64 room_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}

// Ответ на проверку доступности комнаты
message AvailabilityResponse {
  bool available = 1;
}

// Определение сервиса RoomsService
service RoomsService {
  rpc GetRooms(Empty) returns (Rooms);
}

// Определение сервиса для создания встреч
service MeetingService {
  rpc CreateMeeting (NewMeetingRequest) returns (NewMeetingResponse);
  rpc CheckAvailability (AvailabilityRequest) returns (AvailabilityResponse);
  rpc GetMeetingsInRoom (MeetingsInTheRoomRequest) returns (MeetingsInTheRoomResponse);
}
